@page "/userdata"
@using PAEG.Model
@inject HttpClient Http

<PageTitle>User data</PageTitle>
<h1>User Data</h1>

@if (userData == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th width="5%">Email</th>
            <th width="95%">Ballots</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var user in userData)
        {
            <tr>
                <td>@user.Email</td>
                <td>@BallotToString(user.BallotPacks)</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private Model.UserData[]? userData;

    protected override async Task OnInitializedAsync()
    {
        userData = await Http.GetFromJsonAsync<Model.UserData[]>(Http.BaseAddress + "/user-data/get-all?private=true");
    }

    private string BallotToString(IEnumerable<IEnumerable<Ballot>> ballotPacks)
    {
        return ballotPacks
            .Take(1)
            .Aggregate("", (acc, item) =>
                acc + item.Aggregate("", (innerAcc, innerItem) =>
                    $"{innerAcc} {innerItem.Id}: ( {innerItem.Candidate} )")
            );
    }
}