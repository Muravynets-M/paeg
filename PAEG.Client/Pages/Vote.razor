@page "/vote"
@using Microsoft.Extensions.Logging
@using PAEG.Model.Model
@inject ILogger<Vote> Logger
@inject HttpClient Http
<h3>Vote</h3>

<form class="w-25">
    <EditForm Model="@_vote" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>

        <div class="form-group">
            <label for="email">Email</label>
            <InputText class="form-control" id="email" @bind-Value="_vote.Email"></InputText>
            @if (Error != null)
            {
                <div class="form-text alert-warning">@Error</div>
            }
        </div>

        <div class="form-group">
            <label for="idBallot">Id Ballot</label>
            <InputNumber class="form-control" id="idBallot" @bind-Value="_vote.IdBallot"></InputNumber>
        </div>

        <div class="form-group">
            <label for="candidate">Candidate</label>
            <InputNumber class="form-control" id="candidate" @bind-Value="_vote.Candidate"></InputNumber>
        </div>

        <br/>
        <button class="btn btn-primary" type="submit">Submit</button>

    </EditForm>
</form>


@code {
    private VoteModel _vote = new();

    private string? Error;

    private async void HandleValidSubmit()
    {
        Error = null;
        Logger.LogInformation(_vote.ToString());

        var result = await Http.PostAsJsonAsync(Http.BaseAddress + "/voting", _vote);
        if (!result.IsSuccessStatusCode)
        {
            Error = "User with such email was not found";
        }
        
        StateHasChanged();
    }

}